// Generated by Cap'n Proto compiler, DO NOT EDIT
// source: paper.capnp

#include "paper.capnp.h"

namespace capnp {
namespace schemas {
static const ::capnp::_::AlignedData<92> b_c51c5f3190764fd1 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    209,  79, 118, 144,  49,  95,  28, 197,
     12,   0,   0,   0,   1,   0,   3,   0,
    233,   5, 140, 237,  85, 227, 255, 252,
      0,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 186,   0,   0,   0,
     29,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     25,   0,   0,   0,  31,   1,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    112,  97, 112, 101, 114,  46,  99,  97,
    112, 110, 112,  58,  77, 101, 115, 104,
     86, 101, 114, 116, 101, 120,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
     20,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    125,   0,   0,   0,  18,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    120,   0,   0,   0,   3,   0,   1,   0,
    132,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    129,   0,   0,   0,  18,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    124,   0,   0,   0,   3,   0,   1,   0,
    136,   0,   0,   0,   2,   0,   1,   0,
      2,   0,   0,   0,   2,   0,   0,   0,
      0,   0,   1,   0,   2,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    133,   0,   0,   0,  18,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    128,   0,   0,   0,   3,   0,   1,   0,
    140,   0,   0,   0,   2,   0,   1,   0,
      3,   0,   0,   0,   3,   0,   0,   0,
      0,   0,   1,   0,   3,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    137,   0,   0,   0,  18,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    132,   0,   0,   0,   3,   0,   1,   0,
    144,   0,   0,   0,   2,   0,   1,   0,
      4,   0,   0,   0,   4,   0,   0,   0,
      0,   0,   1,   0,   4,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    141,   0,   0,   0,  18,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    136,   0,   0,   0,   3,   0,   1,   0,
    148,   0,   0,   0,   2,   0,   1,   0,
    120,   0,   0,   0,   0,   0,   0,   0,
     10,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     10,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    121,   0,   0,   0,   0,   0,   0,   0,
     10,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     10,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    114,   0,   0,   0,   0,   0,   0,   0,
     10,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     10,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    103,   0,   0,   0,   0,   0,   0,   0,
     10,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     10,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     98,   0,   0,   0,   0,   0,   0,   0,
     10,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     10,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_c51c5f3190764fd1 = b_c51c5f3190764fd1.words;
#if !CAPNP_LITE
static const uint16_t m_c51c5f3190764fd1[] = {4, 3, 2, 0, 1};
static const uint16_t i_c51c5f3190764fd1[] = {0, 1, 2, 3, 4};
const ::capnp::_::RawSchema s_c51c5f3190764fd1 = {
  0xc51c5f3190764fd1, b_c51c5f3190764fd1.words, 92, nullptr, m_c51c5f3190764fd1,
  0, 5, i_c51c5f3190764fd1, nullptr, nullptr, { &s_c51c5f3190764fd1, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<52> b_d03a56a38cfd0199 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    153,   1, 253, 140, 163,  86,  58, 208,
     12,   0,   0,   0,   1,   0,   1,   0,
    233,   5, 140, 237,  85, 227, 255, 252,
      1,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 162,   0,   0,   0,
     29,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     25,   0,   0,   0, 119,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    112,  97, 112, 101, 114,  46,  99,  97,
    112, 110, 112,  58,  78, 101, 119,  77,
    101, 115, 104,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      8,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0,  26,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     36,   0,   0,   0,   3,   0,   1,   0,
     48,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     45,   0,   0,   0,  74,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     44,   0,   0,   0,   3,   0,   1,   0,
     72,   0,   0,   0,   2,   0,   1,   0,
    105, 100,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    118, 101, 114, 116, 105,  99, 101, 115,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    209,  79, 118, 144,  49,  95,  28, 197,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_d03a56a38cfd0199 = b_d03a56a38cfd0199.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_d03a56a38cfd0199[] = {
  &s_c51c5f3190764fd1,
};
static const uint16_t m_d03a56a38cfd0199[] = {0, 1};
static const uint16_t i_d03a56a38cfd0199[] = {0, 1};
const ::capnp::_::RawSchema s_d03a56a38cfd0199 = {
  0xd03a56a38cfd0199, b_d03a56a38cfd0199.words, 52, d_d03a56a38cfd0199, m_d03a56a38cfd0199,
  1, 2, i_d03a56a38cfd0199, nullptr, nullptr, { &s_d03a56a38cfd0199, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<32> b_e3ab76b29f88d974 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    116, 217, 136, 159, 178, 118, 171, 227,
     12,   0,   0,   0,   1,   0,   1,   0,
    233,   5, 140, 237,  85, 227, 255, 252,
      0,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 194,   0,   0,   0,
     29,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     25,   0,   0,   0,  63,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    112,  97, 112, 101, 114,  46,  99,  97,
    112, 110, 112,  58,  78, 101, 119,  77,
     97, 116, 101, 114, 105,  97, 108,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      4,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0,  26,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   3,   0,   1,   0,
     20,   0,   0,   0,   2,   0,   1,   0,
    105, 100,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_e3ab76b29f88d974 = b_e3ab76b29f88d974.words;
#if !CAPNP_LITE
static const uint16_t m_e3ab76b29f88d974[] = {0};
static const uint16_t i_e3ab76b29f88d974[] = {0};
const ::capnp::_::RawSchema s_e3ab76b29f88d974 = {
  0xe3ab76b29f88d974, b_e3ab76b29f88d974.words, 32, nullptr, m_e3ab76b29f88d974,
  0, 1, i_e3ab76b29f88d974, nullptr, nullptr, { &s_e3ab76b29f88d974, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<63> b_fe6b38683f01b795 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    149, 183,   1,  63, 104,  56, 107, 254,
     12,   0,   0,   0,   1,   0,   2,   0,
    233,   5, 140, 237,  85, 227, 255, 252,
      0,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 194,   0,   0,   0,
     29,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     25,   0,   0,   0, 175,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    112,  97, 112, 101, 114,  46,  99,  97,
    112, 110, 112,  58,  78, 101, 119,  68,
    114,  97, 119,  97,  98, 108, 101,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
     12,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     69,   0,   0,   0,  26,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     64,   0,   0,   0,   3,   0,   1,   0,
     76,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     73,   0,   0,   0,  58,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     68,   0,   0,   0,   3,   0,   1,   0,
     80,   0,   0,   0,   2,   0,   1,   0,
      2,   0,   0,   0,   2,   0,   0,   0,
      0,   0,   1,   0,   2,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     77,   0,   0,   0,  90,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     76,   0,   0,   0,   3,   0,   1,   0,
     88,   0,   0,   0,   2,   0,   1,   0,
    105, 100,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    109, 101, 115, 104,  73, 100,   0,   0,
      8,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    109,  97, 116, 101, 114, 105,  97, 108,
     73, 100,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_fe6b38683f01b795 = b_fe6b38683f01b795.words;
#if !CAPNP_LITE
static const uint16_t m_fe6b38683f01b795[] = {0, 2, 1};
static const uint16_t i_fe6b38683f01b795[] = {0, 1, 2};
const ::capnp::_::RawSchema s_fe6b38683f01b795 = {
  0xfe6b38683f01b795, b_fe6b38683f01b795.words, 63, nullptr, m_fe6b38683f01b795,
  0, 3, i_fe6b38683f01b795, nullptr, nullptr, { &s_fe6b38683f01b795, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<93> b_bb51358bea8a4edd = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    221,  78, 138, 234, 139,  53,  81, 187,
     12,   0,   0,   0,   1,   0,   3,   0,
    233,   5, 140, 237,  85, 227, 255, 252,
      0,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 170,   0,   0,   0,
     29,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     25,   0,   0,   0,  31,   1,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    112,  97, 112, 101, 114,  46,  99,  97,
    112, 110, 112,  58,  68, 114,  97, 119,
     67,  97, 108, 108,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
     20,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    125,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    120,   0,   0,   0,   3,   0,   1,   0,
    132,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    129,   0,   0,   0,  74,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    128,   0,   0,   0,   3,   0,   1,   0,
    140,   0,   0,   0,   2,   0,   1,   0,
      2,   0,   0,   0,   2,   0,   0,   0,
      0,   0,   1,   0,   2,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    137,   0,   0,   0,  18,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    132,   0,   0,   0,   3,   0,   1,   0,
    144,   0,   0,   0,   2,   0,   1,   0,
      3,   0,   0,   0,   3,   0,   0,   0,
      0,   0,   1,   0,   3,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    141,   0,   0,   0,  18,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    136,   0,   0,   0,   3,   0,   1,   0,
    148,   0,   0,   0,   2,   0,   1,   0,
      4,   0,   0,   0,   4,   0,   0,   0,
      0,   0,   1,   0,   4,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    145,   0,   0,   0,  50,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    140,   0,   0,   0,   3,   0,   1,   0,
    152,   0,   0,   0,   2,   0,   1,   0,
    109, 101, 115, 104,   0,   0,   0,   0,
      8,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    109,  97, 116, 101, 114, 105,  97, 108,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    120,   0,   0,   0,   0,   0,   0,   0,
     10,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     10,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    121,   0,   0,   0,   0,   0,   0,   0,
     10,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     10,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    115,  99,  97, 108, 101,   0,   0,   0,
     10,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     10,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_bb51358bea8a4edd = b_bb51358bea8a4edd.words;
#if !CAPNP_LITE
static const uint16_t m_bb51358bea8a4edd[] = {1, 0, 4, 2, 3};
static const uint16_t i_bb51358bea8a4edd[] = {0, 1, 2, 3, 4};
const ::capnp::_::RawSchema s_bb51358bea8a4edd = {
  0xbb51358bea8a4edd, b_bb51358bea8a4edd.words, 93, nullptr, m_bb51358bea8a4edd,
  0, 5, i_bb51358bea8a4edd, nullptr, nullptr, { &s_bb51358bea8a4edd, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<36> b_aeae18a6b8d91a59 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     89,  26, 217, 184, 166,  24, 174, 174,
     12,   0,   0,   0,   1,   0,   0,   0,
    233,   5, 140, 237,  85, 227, 255, 252,
      1,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 170,   0,   0,   0,
     29,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     25,   0,   0,   0,  63,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    112,  97, 112, 101, 114,  46,  99,  97,
    112, 110, 112,  58,  68, 114,  97, 119,
     76, 105, 115, 116,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      4,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   3,   0,   1,   0,
     36,   0,   0,   0,   2,   0,   1,   0,
    108, 105, 115, 116,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    221,  78, 138, 234, 139,  53,  81, 187,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_aeae18a6b8d91a59 = b_aeae18a6b8d91a59.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_aeae18a6b8d91a59[] = {
  &s_bb51358bea8a4edd,
};
static const uint16_t m_aeae18a6b8d91a59[] = {0};
static const uint16_t i_aeae18a6b8d91a59[] = {0};
const ::capnp::_::RawSchema s_aeae18a6b8d91a59 = {
  0xaeae18a6b8d91a59, b_aeae18a6b8d91a59.words, 36, d_aeae18a6b8d91a59, m_aeae18a6b8d91a59,
  1, 1, i_aeae18a6b8d91a59, nullptr, nullptr, { &s_aeae18a6b8d91a59, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
}  // namespace schemas
}  // namespace capnp

// =======================================================================================

namespace escher {
namespace capnp {

// MeshVertex
constexpr uint16_t MeshVertex::_capnpPrivate::dataWordSize;
constexpr uint16_t MeshVertex::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind MeshVertex::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* MeshVertex::_capnpPrivate::schema;
constexpr ::capnp::_::RawBrandedSchema const* MeshVertex::_capnpPrivate::brand;
#endif  // !CAPNP_LITE

// NewMesh
constexpr uint16_t NewMesh::_capnpPrivate::dataWordSize;
constexpr uint16_t NewMesh::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind NewMesh::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* NewMesh::_capnpPrivate::schema;
constexpr ::capnp::_::RawBrandedSchema const* NewMesh::_capnpPrivate::brand;
#endif  // !CAPNP_LITE

// NewMaterial
constexpr uint16_t NewMaterial::_capnpPrivate::dataWordSize;
constexpr uint16_t NewMaterial::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind NewMaterial::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* NewMaterial::_capnpPrivate::schema;
constexpr ::capnp::_::RawBrandedSchema const* NewMaterial::_capnpPrivate::brand;
#endif  // !CAPNP_LITE

// NewDrawable
constexpr uint16_t NewDrawable::_capnpPrivate::dataWordSize;
constexpr uint16_t NewDrawable::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind NewDrawable::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* NewDrawable::_capnpPrivate::schema;
constexpr ::capnp::_::RawBrandedSchema const* NewDrawable::_capnpPrivate::brand;
#endif  // !CAPNP_LITE

// DrawCall
constexpr uint16_t DrawCall::_capnpPrivate::dataWordSize;
constexpr uint16_t DrawCall::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind DrawCall::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* DrawCall::_capnpPrivate::schema;
constexpr ::capnp::_::RawBrandedSchema const* DrawCall::_capnpPrivate::brand;
#endif  // !CAPNP_LITE

// DrawList
constexpr uint16_t DrawList::_capnpPrivate::dataWordSize;
constexpr uint16_t DrawList::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind DrawList::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* DrawList::_capnpPrivate::schema;
constexpr ::capnp::_::RawBrandedSchema const* DrawList::_capnpPrivate::brand;
#endif  // !CAPNP_LITE


}  // namespace
}  // namespace

